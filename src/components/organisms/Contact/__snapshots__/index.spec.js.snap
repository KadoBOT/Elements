exports[`test should render the Contact 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <div
    className="contact"
    id="CONTACT">
    <About
        subtitle="Let\'s talk and go on!"
        text="Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua." />
    <ContactForm
        errors={Object {}}
        message={Object {}}
        onChange={[Function]}
        onSubmit={[Function]} />
</div>,
  "nodes": Array [
    <div
      className="contact"
      id="CONTACT">
      <About
            subtitle="Let\'s talk and go on!"
            text="Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua." />
      <ContactForm
            errors={Object {}}
            message={Object {}}
            onChange={[Function]}
            onSubmit={[Function]} />
</div>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 2,
      "_context": Object {},
      "_currentElement": <Contact
        errors={Object {}}
        handleMessage={[Function]}
        message={Object {}}
        sendMessage={[Function]} />,
      "_debugID": 1,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": StatelessComponent {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "props": Object {
          "errors": Object {},
          "handleMessage": [Function],
          "message": Object {},
          "sendMessage": [Function],
        },
        "refs": Object {},
        "state": null,
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 1,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <div
          className="contact"
          id="CONTACT">
          <About
                    subtitle="Let\'s talk and go on!"
                    text="Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua." />
          <ContactForm
                    errors={Object {}}
                    message={Object {}}
                    onChange={[Function]}
                    onSubmit={[Function]} />
</div>,
        "_debugID": 2,
        "_renderedOutput": <div
          className="contact"
          id="CONTACT">
          <About
                    subtitle="Let\'s talk and go on!"
                    text="Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua." />
          <ContactForm
                    errors={Object {}}
                    message={Object {}}
                    onChange={[Function]}
                    onSubmit={[Function]} />
</div>,
      },
      "_renderedNodeType": 0,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <Contact
    errors={Object {}}
    handleMessage={[Function]}
    message={Object {}}
    sendMessage={[Function]} />,
}
`;
