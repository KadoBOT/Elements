exports[`test should render the Hero 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <div
    className="hero">
    <div
        className="hero__gradient" />
    <styled.p>
        1
    </styled.p>
    <styled.p>
        2
    </styled.p>
</div>,
  "nodes": Array [
    <div
      className="hero">
      <div
            className="hero__gradient" />
      <styled.p>
            1
      </styled.p>
      <styled.p>
            2
      </styled.p>
</div>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 2,
      "_context": Object {},
      "_currentElement": <Hero
        overlay={true}
        subtitle="2"
        title="1" />,
      "_debugID": 1,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": StatelessComponent {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "props": Object {
          "overlay": true,
          "subtitle": "2",
          "title": "1",
        },
        "refs": Object {},
        "state": null,
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 1,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <div
          className="hero">
          <div
                    className="hero__gradient" />
          <styled.p>
                    1
          </styled.p>
          <styled.p>
                    2
          </styled.p>
</div>,
        "_debugID": 2,
        "_renderedOutput": <div
          className="hero">
          <div
                    className="hero__gradient" />
          <styled.p>
                    1
          </styled.p>
          <styled.p>
                    2
          </styled.p>
</div>,
      },
      "_renderedNodeType": 0,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <Hero
    overlay={true}
    subtitle="2"
    title="1" />,
}
`;
