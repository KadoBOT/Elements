exports[`test should render the Clients 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <div>
    Loading...
</div>,
  "nodes": Array [
    <div>
      Loading...
</div>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 0,
      "_context": Object {},
      "_currentElement": <Clients
        clients={false}
        fetchClients={[Function]}
        running={true} />,
      "_debugID": 1,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": Clients {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "props": Object {
          "clients": false,
          "fetchClients": [Function],
          "running": true,
        },
        "refs": Object {},
        "state": null,
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 1,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <div>
          Loading...
</div>,
        "_debugID": 2,
        "_renderedOutput": <div>
          Loading...
</div>,
      },
      "_renderedNodeType": 0,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <Clients
    clients={false}
    fetchClients={[Function]}
    running={true} />,
}
`;

exports[`test should render the Clients 2`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <div
    className="clients"
    data-aos="zoom-in"
    data-aos-anchor-placement="top-center">
    <styled.p>
        Discover many more, or else you can contact us for more information.
    </styled.p>
</div>,
  "nodes": Array [
    <div
      className="clients"
      data-aos="zoom-in"
      data-aos-anchor-placement="top-center">
      <styled.p>
            Discover many more, or else you can contact us for more information.
      </styled.p>
</div>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 0,
      "_context": Object {},
      "_currentElement": <Clients
        clients={
                Object {
                        "results": Array [],
                      }
        }
        fetchClients={[Function]}
        running={false} />,
      "_debugID": 3,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": Clients {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "props": Object {
          "clients": Object {
            "results": Array [],
          },
          "fetchClients": [Function],
          "running": false,
        },
        "refs": Object {},
        "state": null,
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 2,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <div
          className="clients"
          data-aos="zoom-in"
          data-aos-anchor-placement="top-center">
          <styled.p>
                    Discover many more, or else you can contact us for more information.
          </styled.p>
</div>,
        "_debugID": 4,
        "_renderedOutput": <div
          className="clients"
          data-aos="zoom-in"
          data-aos-anchor-placement="top-center">
          <styled.p>
                    Discover many more, or else you can contact us for more information.
          </styled.p>
</div>,
      },
      "_renderedNodeType": 0,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <Clients
    clients={
        Object {
            "results": Array [],
          }
    }
    fetchClients={[Function]}
    running={false} />,
}
`;
