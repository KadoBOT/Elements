exports[`test should render the Input 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <label
    className="input">
    <div
        className="input__label">
        <styled.p>
            name
            <span
                className="input__required">
                •
            </span>
        </styled.p>
    </div>
    <input
        className="input__error-false"
        name="name"
        onChange={[Function]}
        placeholder="place name here..."
        required={true}
        type="text"
        value="John Doe" />
    <ul
        className="input__errors">
        
    </ul>
</label>,
  "nodes": Array [
    <label
      className="input">
      <div
            className="input__label">
            <styled.p>
                  name
                  <span
                        className="input__required">
                        •
                  </span>
            </styled.p>
      </div>
      <input
            className="input__error-false"
            name="name"
            onChange={[Function]}
            placeholder="place name here..."
            required={true}
            type="text"
            value="John Doe" />
      <ul
            className="input__errors">
            
      </ul>
</label>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 2,
      "_context": Object {},
      "_currentElement": <Unknown
        errors={Array []}
        isRequired={true}
        label="name"
        name="name"
        onChange={[Function]}
        placeholder="place name here..."
        type="text"
        value="John Doe" />,
      "_debugID": 1,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": StatelessComponent {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "props": Object {
          "errors": Array [],
          "isRequired": true,
          "label": "name",
          "name": "name",
          "onChange": [Function],
          "placeholder": "place name here...",
          "type": "text",
          "value": "John Doe",
        },
        "refs": Object {},
        "state": null,
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 1,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <label
          className="input">
          <div
                    className="input__label">
                    <styled.p>
                              name
                              <span
                                        className="input__required">
                                        •
                              </span>
                    </styled.p>
          </div>
          <input
                    className="input__error-false"
                    name="name"
                    onChange={[Function]}
                    placeholder="place name here..."
                    required={true}
                    type="text"
                    value="John Doe" />
          <ul
                    className="input__errors">
                    
          </ul>
</label>,
        "_debugID": 2,
        "_renderedOutput": <label
          className="input">
          <div
                    className="input__label">
                    <styled.p>
                              name
                              <span
                                        className="input__required">
                                        •
                              </span>
                    </styled.p>
          </div>
          <input
                    className="input__error-false"
                    name="name"
                    onChange={[Function]}
                    placeholder="place name here..."
                    required={true}
                    type="text"
                    value="John Doe" />
          <ul
                    className="input__errors">
                    
          </ul>
</label>,
      },
      "_renderedNodeType": 0,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <Unknown
    errors={Array []}
    isRequired={true}
    label="name"
    name="name"
    onChange={[Function]}
    placeholder="place name here..."
    type="text"
    value="John Doe" />,
}
`;
